{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","firebase","getFirebase","auth","then","logout","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initails","SignedOutLinks","state","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","autherFirstName","autherLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","console","log","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","name","cols","rows","autherId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reduxReactFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99dc4b0f.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n           {props.profile.initails}\n            </NavLink></li>   \n        </ul>\n    )\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return{\n        signOut:()=>dispatch(signOut())\n    }\n}\nexport default connect(null,  mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type:'LOGIN_SUCCESS'});\n        }).catch((err)=>{\n            dispatch({ type: 'LOGIN_ERROR', err});\n        });\n    }\n}\nexport const signOut=()=>{\n    return(dispatch, getState, {getFirebase})=>{\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(()=>{\n            firebase.logout();\n            dispatch({ type:'SIGNOUT_SUCCESS'});\n        });\n    }\n}\nexport const signUp =(newUser)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase= getFirebase();\n        const firestore=getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName:newUser.firstName,\n                lastName:newUser.lastName,\n                initails:newUser.firstName[0]+newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:'SIGNUP_SUCCESS' })\n        }).catch((err)=>{\n            dispatch({type:'SIGNUP_ERROR', err})\n        })\n    }\n}\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>SignUp</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\nexport default SignedOutLinks;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignInLinks from './SignedInLinks';\nimport SignOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar=(props)=>{\n    const { auth,profile } = props;\n    //console.log(profile);\n    const links = auth.uid ? <SignInLinks profile={profile}/> : <SignOutLinks/>;\n    return(\n        <nav className=\"nav-wrapper green darken-5\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\nconst mapStateToProps=(state)=>{\n    //console.log(state);\n    return{\n        auth: state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\nimport moment from 'moment'\nconst Notifications=(props)=>{\n    const{notifications}=props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <ul className=\"notifictions\">\n                        {notifications && notifications.map(item=>{\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user } </span>\n                                    <span>{ item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            ) \n                        })}  \n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react';\nimport moment from 'moment';\nconst ProjectSummary=({project})=>{\n    //console.log(project);\n    return(\n         <div className=\"card z-depth-0 project-summery\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.autherFirstName} {project.autherLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n    )\n}\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList=({projects})=>{\n    return(\n        <div className=\"project-list section\">\n          {\n            projects && projects.map(project=>{\n             return(\n               <Link to={'/project/'+project.id} key={project.id}>\n                <ProjectSummary project={project} />\n               </Link>\n                )\n            })\n          }\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {compose } from 'redux'; \nimport {Redirect} from 'react-router-dom'; \n\nclass Dashboard extends Component{\n    \n    render(){\n       // console.log(this.props)\n        const { projects,auth,notifications } = this.props;\n        if(!auth.uid) return <Redirect to ='/signin' />\n    return(\n            <div className=\"dashboard continer\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />    \n                    </div>  \n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    //console.log(state);\n    return{\n        projects:state.firestore.ordered.projects,\n        auth:state.firebase.auth,\n        notifications:state.firestore.ordered.notifications\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects',orderBy:['createdAt','desc']},\n        {collection:'notifications',limit:3,orderBy:['time','desc']}\n\n    ])   \n)(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport moment from 'moment'\n\nconst ProjectDetails=(props) =>{\n  console.log('testing:',props); \n  const {project}=props;\n  if(project){\n    return(\n      <div className=\"continer section project-details\">\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">{project.title} </span>\n                <p>{project.content}</p>\n            </div>\n            <div className=\"card-action gret ligthen-4 grey-text\">\n                <div>{project.autherFirstName} {project.autherLastName}</div>\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n        </div>\n    </div>\n    )\n       \n  }else{\n    return ( \n      <div className=\"conatiner center\">\n        <p>loding projects...</p>\n      </div>\n         \n      )\n  }\n \n}\n\nconst mapStateToProps=(state,ownProps)=>{\n  console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id]:null\n  return{\n    project:project\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {collection:'projects'}\n  ])\n)(ProjectDetails)\n","import React, { Component } from \"react\"; \nimport {Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\n\n\nclass SignIn extends Component {\n  state = {\n    email:'',\n    password:''\n  }\n  handleChange=(e)=>{\n      this.setState({   \n          [e.target.id]:e.target.value\n      })\n  }\n  handleSubmit=(e)=>{\n    e.preventDefault();\n    this.props.signIn(this.state); \n}\n\n  render() {\n      const {auth,authError} = this.props;\n      if(auth.uid) return <Redirect to='/' /> \n    return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit}className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink ligthten-1 z-depth-0\">Login</button>\n                </div>\n                <div className=\"red-text center\">\n                    {authError ? <p>{authError}</p>:null }\n                </div>\n            </form>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        authError:state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n        signIn: (creds)=>dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signUp} from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email:'',\n    password:'',\n    firstName:'',\n    lastName:''\n  }\n  handleChange=(e)=>{\n      this.setState({   \n          [e.target.id]:e.target.value\n      })\n  }\n  handleSubmit=(e)=>{\n    e.preventDefault();\n    this.props.signUp(this.state)\n}\n\n  render() {\n    const {auth,authError}=this.props;\n    if(auth.uid) return <Redirect to='/' /> \n    return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit}className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">FirstName</label>\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">LastName</label>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink ligthten-1 z-depth-0\">SignUp</button>\n                    <div className=\"red-text center\">\n                        {console.log('objerror:',authError)}\n                        {authError ? <p>{authError}</p>:null}\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signUp:(newUser)=>dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\nimport {createProject} from '../../store/actions/projectActions'\n\nclass CreateProject extends Component {\n  state = {\n    title:'',\n    content:''\n  }\n  handleChange=(e)=>{\n      this.setState({   \n          [e.target.id]:e.target.value\n      })\n  }\n  handleSubmit=(e)=>{\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n}\n\n  render() {\n    return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit}className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Project Content</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project-Content</label>\n                    <textarea name=\"\" id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink ligthten-1 z-depth-0\">Create</button>\n                </div>\n            </form>\n        </div>\n    )\n  }\n}\n    \nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        createProject: (project)=>dispatch(createProject(project))\n    }\n   \n}\nexport default connect(null,mapDispatchToProps)(CreateProject);\n","import { firestore } from \"firebase\";\n\nexport const createProject =(project)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        //make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const autherId = getState().firebase.auth.uid;\n\n    firestore.collection('projects').add({\n        ...project,\n        autherFirstName:profile.firstName,\n        autherLastName:profile.lastName,\n        autherId:autherId,\n        createdAt:new Date()\n\n    }).then(()=>{\n        dispatch({type:'CREATE_PROJECT',project});\n    }).catch((err)=>{\n        dispatch({type:'CREATE_PROJECT_ERROR',err});\n    })\n    }\n}; \n","import React, { Component } from \"react\";\nimport { BrowserRouter,Switch,Route } from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\n    authError:null\n}\n\nconst authReducer=(state=initState,action)=>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return{\n                ...state,\n                authError:'login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return{\n                ...state,\n                authError:null\n             }\n        case 'SIGNOUT_SUCCESS':\n             console.log('signout sucess');\n             return state; \n        case 'SIGNUP_SUCCESS':\n             console.log('signup sucess');\n             return{\n                ...state,\n                authError:null\n             }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return{\n                ...state,\n                authError:action.err.message\n            }\n           \n        default:\n        return state;\n    }\n}\nexport default authReducer;\n","const initState={\n    projects:[\n        {id:'1',title:'help me find peach',content:'blah blah blah'},\n        {id:'2',title:'collect all the starsd',content:'blah blah blah'},\n        {id:'3',title:'egg hunt with chinu',content:'blah blah blah'},\n        {id:'4',title:'get rid of all things',content:'blah blah blah'},\n\n    ]\n}\n\nconst projectReducer=(state=initState,action)=>{\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error:', action.err);\n            return state;\n        default:\n        return state;\n    }\n}\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore:firestoreReducer,\n    firebase: firebaseReducer \n});\n\nexport default rootReducer;","import * as firebase from 'firebase/app'\n//import firebase from 'firebase/app';\nimport 'firebase/firebase';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\n var firebaseConfig = {\n    apiKey: \"AIzaSyAxxKv8VA0rXu1vOLEkweTtFrPN1YVlXrM\",\n    authDomain: \"marioplan-f3927.firebaseapp.com\",\n    databaseURL: \"https://marioplan-f3927.firebaseio.com\",\n    projectId: \"marioplan-f3927\",\n    storageBucket: \"marioplan-f3927.appspot.com\",\n    messagingSenderId: \"567606756697\",\n    appId: \"1:567606756697:web:bd8f8ae9f56aa575\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({timestampsInSnapshots:true});\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore,getFirestore} from 'redux-firestore';\nimport {getFirebase, reduxReactFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store=createStore(rootReducer,\n   compose(\n       applyMiddleware(thunk.withExtraArgument({ getFirebase,getFirestore})),\n       reduxFirestore(fbConfig),\n       reduxReactFirebase(fbConfig, {useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady:true})\n   )\n    );\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}